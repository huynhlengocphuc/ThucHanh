{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNUSmYy1WfqChwESc6RkgZ0",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huynhlengocphuc/ThucHanh/blob/main/ch%C6%B0%C6%A1ng%205\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=3\n",
        "print(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F01Z3fI9SQlT",
        "outputId": "9fa89de4-ca1d-4b93-b9e0-27c0bfc167da"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import math\n",
        "x=3\n",
        "lap=1\n",
        "while(x!=math.sqrt(x+1)):\n",
        "  x=math.sqrt(x+1)\n",
        "  lap=lap+1\n",
        "  x\n"
      ],
      "metadata": {
        "id": "T5xexELZTSMI"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lap"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vh23pQU-TxcB",
        "outputId": "2d8bc4ea-e586-44df-b849-3ac843bfe0df"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "32"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy as sp\n",
        "from sympy import Symbol\n",
        "x=Symbol('x')\n",
        "sp.solve(x-sp.sqrt(1+x),x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KEh1_UlgT3aA",
        "outputId": "c6e03bff-b64f-4d89-9903-3de541a655c9"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1/2 + sqrt(5)/2]"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "v1=np.array([1.,2.,3.])# taoj veter 3 chiều\n",
        "v2=np.array([2.,1.,0.])\n",
        "v3=v1+v2 #cộng vetor\n",
        "v3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WST3y8DJUeoH",
        "outputId": "91ecf6e4-d517-420d-f2a7-7d1986ec1d59"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3., 3., 3.])"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "3*v1+2*v2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5UjMOZ_NVTFv",
        "outputId": "23004038-849d-498d-fc00-22b9f4c692d9"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([7., 8., 9.])"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "[1,2,3]+[2,1,0]\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EPU-7SLlVdgU",
        "outputId": "612835d4-2ba1-4c39-dd72-b0c8ca07a915"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 2, 3, 2, 1, 0]"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "3*[1,2,3]+2*[2,1,0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IcLMddqQVm7m",
        "outputId": "833d2196-1015-4511-8b23-f39df1b9b93f"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 1, 0, 2, 1, 0]"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "v4=np.hstack([v1,v2])\n"
      ],
      "metadata": {
        "id": "wR_MniyEVxeN"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "np.dot(v1,v2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JSgsucYgV9jl",
        "outputId": "d1c3f13e-240f-49bc-f3cb-4d7c2f689ced"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4.0"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "angles=np.linspace(0,np.pi/2,5)\n",
        "angles"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rjAxSE13WEhE",
        "outputId": "57bf2998-2d88-4b8c-a72e-a757f65233bc"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.        , 0.39269908, 0.78539816, 1.17809725, 1.57079633])"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "np.sin(angles)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mIO4lUNHWYdb",
        "outputId": "3d6e7f75-a37f-454d-aa81-18bd115e028b"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.        , 0.38268343, 0.70710678, 0.92387953, 1.        ])"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sympy import sin as sysin\n",
        "angles=np.linspace(0,np.pi/2,5)\n",
        "sinangle=np.zeros(5) # tương đương sinangle=np.array([0.0,0.0,0.0,0.0,0.0])\n",
        "len(angles) #kiểm tra kích thước/ số chiều của vector angles\n",
        "for i in range(len(angles)):\n",
        "  sinangle[i]=sysin(angles[i]) "
      ],
      "metadata": {
        "id": "Lg6uLe6jW1yM"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "goc=np.pi/3\n",
        "A=np.array([[np.cos(goc),-np.sin(goc)],\n",
        "           [np.sin(goc),np.cos(goc)]])\n",
        "V=np.array([1.,0])\n",
        "Y=np.dot(A,V)\n",
        "Y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nmNu1GRcYs_p",
        "outputId": "6ff959d4-157f-4cc9-9ba9-b298ee3a1379"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.5      , 0.8660254])"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from numpy import diff\n",
        "dx=0.1\n",
        "y=[1,2,3,4,5,6]\n",
        "dy=diff(y)/dx\n",
        "dy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v90ABv8yap52",
        "outputId": "9807de32-827d-43ac-b23c-13fc105c5869"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([10., 10., 10., 10., 10.])"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "z=np.array([1,2,3,4,5,6])\n",
        "dz=diff(z)/dx\n",
        "dz"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OKMAdVnIbF1j",
        "outputId": "4af64402-a66a-45e2-d470-51d6e1ecb130"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([10., 10., 10., 10., 10.])"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from numpy import diff\n",
        "x=[.1,.2,.5,.6,.7,.8,.9]\n",
        "y=[1,2,3,4,4,5,6]\n",
        "dydx=diff(y)/diff(x)\n",
        "print(dydx)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sr7oeB0ubVct",
        "outputId": "b8d8c7ca-95aa-444c-aa79-e76b733315e4"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[10.          3.33333333 10.          0.         10.         10.        ]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "from sympy import*\n",
        "x=Symbol('x')\n",
        "f=x*sin(1/x)\n",
        "c=Symbol('c')\n",
        "delta=Symbol('delta')\n",
        "c=0\n",
        "delta=1/4\n",
        "sympy.plot(f,(x,c-delta,c+delta))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 314
        },
        "id": "MzhZ_9yPcWzS",
        "outputId": "b62e19dc-1fa3-40f1-885e-d7583748b774"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sympy.plotting.plot.Plot at 0x7f73a4f49090>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sympy.plot(f,abs(x),-abs(x),(x,c-delta,c+delta))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 314
        },
        "id": "OrB2uOILe2vO",
        "outputId": "2b258303-1eb1-4c58-cc1b-c7cd7dc158a3"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sympy.plotting.plot.Plot at 0x7f73a4dee090>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sympy import Symbol,solve, Derivative\n",
        "x=Symbol('x')\n",
        "f=-x**2+4*x-3\n",
        "d1=Derivative(f,x).doit()\n",
        "cuctri=solve(d1)\n",
        "cuctri\n",
        "[2]\n",
        "A=cuctri[0]\n",
        "d2=Derivative(d1,x).doit()\n",
        "d2.subs({x:A}).evalf()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "id": "_-pAaleMfPPW",
        "outputId": "9267a6be-39e6-488c-eef6-4ff8666c2dda"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle -2.0$",
            "text/plain": [
              "-2.00000000000000"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_min=0\n",
        "x_max=4\n",
        "f.subs({x:A}).evalf()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "id": "Jrx794MRgarz",
        "outputId": "af8335f7-5a50-45f4-b2e7-e2b02835ae29"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle 1.0$",
            "text/plain": [
              "1.00000000000000"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f.subs({x:x_min}).evalf()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "id": "iKjQbnPNgwqZ",
        "outputId": "5a3b6f4a-fe22-4473-834a-c31a27c9dba3"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle -3.0$",
            "text/plain": [
              "-3.00000000000000"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f.subs({x:x_max}).evalf()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "id": "lbk10lF2hF7h",
        "outputId": "e93111d8-ad31-4f3a-88d9-b5f7d2a8c7ae"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle -3.0$",
            "text/plain": [
              "-3.00000000000000"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sympy.geometry import*\n",
        "#Tạo các điểm  P1,P2,P3,P4\n",
        "P1=Point(0,0)\n",
        "P2=Point(3,4)\n",
        "P3=Point(2,-1)\n",
        "P4=Point(-1,5)\n",
        "# Tạo 2 đoạn đường S1 và S2:\n",
        "S1=Segment(P1,P2)\n",
        "S2=Segment(P3,P4)\n",
        "# Kiếm 3 điểm thẳng hàng:\n",
        "Point.is_collinear(P1,P2,P3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_vrgRB47g17d",
        "outputId": "7c72c832-6296-44de-e10b-8b7dfaa54df6"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Độ dài đoạn đường S1\n",
        "S1.length\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "id": "BQE7u2RNi-nn",
        "outputId": "784ae82c-c016-472f-d31e-02fa99c65f79"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle 5$",
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Lấy trung điểm của đoạn 2:\n",
        "S2.midpoint"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 58
        },
        "id": "Js_t4TjpjNB9",
        "outputId": "8286716f-e14b-4ad4-bcc9-6e82bdbb96b3"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle Point2D\\left(\\frac{1}{2}, 2\\right)$",
            "text/plain": [
              "Point2D(1/2, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Tính độ dốc của đường S1\n",
        "S1.slope"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "id": "titbs7D0hmPL",
        "outputId": "93909a26-c70e-4d87-bcbb-2f6c820ad4ee"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle \\frac{4}{3}$",
            "text/plain": [
              "4/3"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Tìm vị trí giao nhau giữa hai đoạn đường\n",
        "S1.intersection(S2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D9xnHsgyjerI",
        "outputId": "ffaa942d-4003-433e-ef75-a74777253ace"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Point2D(9/10, 6/5)]"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "3_IG255gj3wm"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Góc giữa hai đoạn\n",
        "Segment.angle_between(S1,S2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "id": "7tHyl1epj-0g",
        "outputId": "8a9a2564-8aef-4221-b3e1-1b0f945f3824"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle \\operatorname{acos}{\\left(\\frac{\\sqrt{5}}{5} \\right)}$",
            "text/plain": [
              "acos(sqrt(5)/5)"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "S1.contains(P3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8-6UYxu-kXj8",
        "outputId": "9918ebd8-7112-4bc3-89d2-3086c9d2122b"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "L1=Line(P1,P2)\n",
        "L1.equation"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bGiPjlADki66",
        "outputId": "88b9b57e-6993-4c18-bc21-4380a6159e97"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method Line2D.equation of Line2D(Point2D(0, 0), Point2D(3, 4))>"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "L1.is_parallel(S1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QH5gIStWk17i",
        "outputId": "8e96b01a-58e8-468a-f13f-8f09e7c3f499"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "L1.is_parallel(S2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B6SQjPn5lAyJ",
        "outputId": "73dd1d2e-d086-49b5-edcb-1e9e99bb036b"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "oaiUAPRelOB0"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}